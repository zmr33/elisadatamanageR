% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_controls7.R
\name{check_controls}
\alias{check_controls}
\title{Extract Controls and Blank Values from ELISA Data}
\usage{
check_controls(
  numeric_data,
  blank_threshold = 0.11,
  control_ranges = list(`Medium Positive Control` = c(7, 15), `High Negative Control` =
    c(1.5, 4.3), `Standard 7` = c(0, 1.7)),
  control_names = list(A = "Medium Positive Control", B = "High Negative Control", C =
    "CTL 3?", H = "Standard 7")
)
}
\arguments{
\item{numeric_data}{Dataframe. The processed ELISA data containing numeric values.}

\item{blank_threshold}{Numeric. The cutoff for blank values in the "450" table. Default is 0.11.}

\item{control_ranges}{List. Named list defining min/max concentration ranges for controls.
Default values:
\itemize{
  \item "Medium Positive Control" = c(7, 15)
  \item "High Negative Control" = c(1.5, 4.3)
  \item "Standard 7" = c(0, 1.7)
}}

\item{control_names}{List. Named list defining the control names based on row_letter values.
Default values:
\itemize{
  \item "A" = "Medium Positive Control"
  \item "B" = "High Negative Control"
  \item "C" = "CTL 3?"
  \item "H" = "Standard 7"
}}
}
\value{
A dataframe containing control and blank values with calculated averages,
        control ranges, and flagged values if they are out of range.
}
\description{
This function extracts control and blank values from ELISA plate data, calculates 
averages, and flags values that fall outside specified ranges. It allows users 
to modify threshold values while maintaining default settings.
}
\details{
- Selects **Medium Positive Control**, **High Negative Control**, **CTL 3?**, and **Standard 7**.
- Selects **blank values** from the 450 table and assigns a threshold.
- Calculates the **average concentration** for each control.
- Flags controls that **fall outside the expected range**.
- Returns a dataframe with relevant control information.
}
\examples{
# Run function with default settings
controls_data <- extract_controls_and_blanks(numeric_data)

# Change the blank threshold and control ranges
controls_data <- check_controls(numeric_data, 
                                             blank_threshold = 0.10,  
                                             control_ranges = list(
                                               "Medium Positive Control" = c(6, 14),
                                               "High Negative Control" = c(1, 5),
                                               "Standard 7" = c(0, 1.5)
                                             ))

# Customize control names
controls_data <- check_controls(numeric_data, 
                                             control_names = list(
                                               "A" = "MP Control",
                                               "B" = "HN Control",
                                               "C" = "CTL 3 Alt",
                                               "H" = "Std 7 Mod"
                                             ))

}
